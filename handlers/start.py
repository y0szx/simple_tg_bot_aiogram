from aiogram import Router, F
from aiogram.filters import CommandStart
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton
from create_bot import duty_admins, save_duty_admins

router = Router()


def get_duty_buttons():
    buttons = [
        [KeyboardButton(text="‚úÖ –ü–æ—Å—Ç –ø—Ä–∏–Ω—è–ª")],
        [KeyboardButton(text="üì§ –ü–æ—Å—Ç —Å–¥–∞–ª")]
    ]
    return ReplyKeyboardMarkup(
        keyboard=buttons,
        resize_keyboard=True,
        one_time_keyboard=False,
    )


@router.message(CommandStart())
async def command_start_handler(message: Message) -> None:
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –±–æ—Ç –¥–ª—è –¥–µ–∂—É—Ä—Å—Ç–≤–∞ –≤ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–µ, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∏–∂–µ.", reply_markup=get_duty_buttons())


@router.message(F.text == "‚úÖ –ü–æ—Å—Ç –ø—Ä–∏–Ω—è–ª")
async def accept_duty(message: Message):
    if message.from_user.id not in duty_admins:
        duty_admins.add(message.from_user.id)
        save_duty_admins(duty_admins)
        await message.answer("–ü–æ—Å—Ç –ø—Ä–∏–Ω—è—Ç. –¢–µ–ø–µ—Ä—å –≤—ã –≤ —Å–ø–∏—Å–∫–µ –¥–µ–∂—É—Ä–Ω—ã—Ö.")
    else:
        await message.answer("–í—ã —É–∂–µ —è–≤–ª—è–µ—Ç–µ—Å—å –¥–µ–∂—É—Ä–Ω—ã–º.")


@router.message(F.text == "üì§ –ü–æ—Å—Ç —Å–¥–∞–ª")
async def release_duty(message: Message):
    if message.from_user.id in duty_admins:
        duty_admins.remove(message.from_user.id)
        save_duty_admins(duty_admins)
        await message.answer("–ü–æ—Å—Ç —Å–¥–∞–Ω. –í—ã –±–æ–ª—å—à–µ –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –¥–µ–∂—É—Ä–Ω—ã–º.")
    else:
        await message.answer("–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –¥–µ–∂—É—Ä–Ω—ã–º.")


@router.message()
async def respond_to_keyword(message: Message) -> None:
    user_message = message.text.lower()

    if not 'üì§ –ü–æ—Å—Ç —Å–¥–∞–ª' or not '‚úÖ –ü–æ—Å—Ç –ø—Ä–∏–Ω—è–ª' in user_message:
        await message.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ.')
